@model SearchQueryProductDTO

@{
    int totalRegistros = (int)ViewBag.CountRow;
    int totalPaginas = (int)Math.Ceiling((double)totalRegistros / Model.Take);
}

<h1>buscar clientes</h1>

<form asp-action="Index">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input asp-for="SendRowCount" type="hidden" id="txtSendRowCount" />
    <input asp-for="Skip" type="hidden" id="txtSkip" />
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label asp-for="Nombre_Like" class="control-label"></label>
                <input asp-for="Nombre_Like" class="form-control"/>
                <span asp-validation-for="Nombre_Like" class="text-danger"></span>
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                    <label for="Take" class="control-label"></label>
                    <select asp-for="Take" class="form-control">
                        @for(var i = 10; i < 1000; i += 10){
                            if(i == Model.Take){
                                <option selected value="@i">@i</option>
                            }
                            else{
                                <option value="@i">@i</option>
                            }
                        }
                    </select>
                    <span asp-asp-validation-for="Take" class="text-danger"></span>
            </div>
        </div>
    </div>
    <br>

    <div class="row">
        <div class="col-12">
            <div class="form-group">
                <input type="submit" id="btnSearch" value="Buscar" class="btn btn-primary"/>
                <a asp-action="Create" class="btn btn-primary">Crear</a>
            </div>
        </div>
    </div>
    <br>
    <div class="row" style="overflow: auto !important">
        <nav aria-label="Page Navigation">
            <ul class="pagination">
                @{
                    int skipAnte = Model.Skip > 0 ? Model.Skip - Model.Take :0;
                    int skipMax = 0;
                }
                <li class="page-item"><a class="page-link" data-skip="@skipAnte" href="#" onclick="paginacion(this)">anterior</a></li>

                @for(var i = 0; i < totalPaginas; i++){
                    int skip = i * Model.Take;

                    int numPag = i + 1;

                    if(skip != Model.Skip){
                        <li ><a data-skip="@skip" href="#" onclick="paginacion(this)">@numPag</a></li>
                    }else{
                        <li><a data-skip="@skip"  href="#" onclick="paginacion(this)">@numPag</a></li>
                    }
                    skipMax = skip;
                }
                @{
                    int SkipS1 = Model.Skip = Model.Take;
                    SkipS1 = SkipS1 > skipMax ? SkipS1 - Model.Take : SkipS1;
                }

                <li class="page-item"><a class="page-link" data-skip="@SkipS1" href="#" onclick="paginacion(this)">siguiente</a></li>
               
            </ul>
        </nav>
    </div>
    <div class="row-cols-6">
        <span>total registro @totalRegistros</span>
    </div>
</form>

<script>
    function paginacion(li){
        const skip = li.getAttribute("data-skip");

        const btnsearch = document.getElementById("btnSearch");
        const txtSkip = document.getElementById("btnSearch");
        const txtSendRowCount = document.getElementById("txtSendCount");

        txtSkip.value = skip;
        txtSendRowCount.value = 1;
        btnsearch.click();
    }
</script>